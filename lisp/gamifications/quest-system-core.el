(defvar hq-xp 0 "–û–±—â–∏–π –æ–ø—ã—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞")
(defvar hq-level 1 "–£—Ä–æ–≤–µ–Ω—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞")
(defvar hq-gold 0 "–ó–æ–ª–æ—Ç–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞")

(defvar hq-inventory '() 
  "–ü—Ä–µ–¥–º–µ—Ç—ã –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ –∏–≥—Ä–æ–∫–∞.")

(defun hq-save-data ()
  "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∫–≤–µ—Å—Ç–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã"
  (with-temp-file "~/.emacs.d/quest-system-data.el"
    (prin1 (list hq-xp 
                hq-level 
                hq-gold) 
          (current-buffer))))

(defun hq-load-data ()
  "–ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∫–≤–µ—Å—Ç–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã"
  (when (file-exists-p "~/.emacs.d/quest-system-data.el")
    (with-temp-buffer
      (insert-file-contents "~/.emacs.d/quest-system-data.el")
      (goto-char (point-min))
      (let ((data (read (current-buffer))))
        (setq hq-xp (nth 0 data)
              hq-level (nth 1 data)
              hq-gold (nth 2 data))))))

(defun hq-add-xp-and-gold (xp gold)
  "–î–æ–±–∞–≤–∏—Ç—å –æ–ø—ã—Ç –∏ –∑–æ–ª–æ—Ç–æ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º —É—Ä–æ–≤–Ω—è"
  (setq hq-xp (+ hq-xp xp))
  (setq hq-level (1+ (/ hq-xp 100)))
  (setq hq-gold (+ hq-gold gold))
  (hq-save-data)
  (message "üèÜ –ü–æ–ª—É—á–µ–Ω–æ: +%d XP, +%d –∑–æ–ª–æ—Ç–∞" xp gold))

;; (defun hq-display-stats ()
;;   "–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≥–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏–∏"
;;   (interactive)
;;   (message "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: –£—Ä–æ–≤–µ–Ω—å %d | XP: %d | –ó–æ–ª–æ—Ç–æ: %d" 
;;            hq-level hq-xp hq-gold))

;; (defun hq-generate-stats-header ()
;;   "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"
;;   (concat 
;;    (propertize (format "üë§ Level %d " (max 1 (floor hq-level)))
;;                'face '(:foreground "#FFD700" :weight bold))
;;    (propertize (format "| XP: %d/%d " 
;;                        (mod (max 0 (floor hq-xp)) 100) 
;;                        100)
;;                'face '(:foreground "#4CAF50" :weight bold))
;;    (propertize (format "| Gold: %d ü™ô" (max 0 (floor hq-gold)))
;;                'face '(:foreground "#FFD700" :weight bold))))

(provide 'quest-system-core)
